Index.PACKAGES = {"smfsb" : [{"name" : "smfsb.Mcmc", "shortDescription" : "Functions for constucting generic Metropolis-Hastings MCMC algorithms, and associated utilities.", "object" : "smfsb\/Mcmc$.html", "members_object" : [{"label" : "summary", "tail" : "(s: Stream[P], plot: Boolean)(arg0: CsvRow[P]): Unit", "member" : "smfsb.Mcmc.summary", "link" : "smfsb\/Mcmc$.html#summary[P](s:Stream[P],plot:Boolean)(implicitevidence$2:smfsb.Types.CsvRow[P]):Unit", "kind" : "def"}, {"label" : "summary", "tail" : "(m: DenseMatrix[Double], plt: Boolean): Unit", "member" : "smfsb.Mcmc.summary", "link" : "smfsb\/Mcmc$.html#summary(m:breeze.linalg.DenseMatrix[Double],plt:Boolean):Unit", "kind" : "def"}, {"label" : "toDMD", "tail" : "(s: Stream[P])(arg0: CsvRow[P]): DenseMatrix[Double]", "member" : "smfsb.Mcmc.toDMD", "link" : "smfsb\/Mcmc$.html#toDMD[P](s:Stream[P])(implicitevidence$1:smfsb.Types.CsvRow[P]):breeze.linalg.DenseMatrix[Double]", "kind" : "def"}, {"label" : "mhStream", "tail" : "(init: P, logLik: (P) ⇒ LogLik, rprop: (P) ⇒ P, dprop: (P, P) ⇒ LogLik, dprior: (P) ⇒ LogLik, verb: Boolean): Stream[P]", "member" : "smfsb.Mcmc.mhStream", "link" : "smfsb\/Mcmc$.html#mhStream[P](init:P,logLik:P=>smfsb.Types.LogLik,rprop:P=>P,dprop:(P,P)=>smfsb.Types.LogLik,dprior:P=>smfsb.Types.LogLik,verb:Boolean):Stream[P]", "kind" : "def"}, {"label" : "nextValue", "tail" : "(logLik: (P) ⇒ LogLik, rprop: (P) ⇒ P, dprop: (P, P) ⇒ LogLik, dprior: (P) ⇒ LogLik, verb: Boolean)(current: (P, LogLik)): (P, LogLik)", "member" : "smfsb.Mcmc.nextValue", "link" : "smfsb\/Mcmc$.html#nextValue[P](logLik:P=>smfsb.Types.LogLik,rprop:P=>P,dprop:(P,P)=>smfsb.Types.LogLik,dprior:P=>smfsb.Types.LogLik,verb:Boolean)(current:(P,smfsb.Types.LogLik)):(P,smfsb.Types.LogLik)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Mcmc$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Mcmc$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Mcmc$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Mcmc$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Mcmc$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Mcmc$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Mcmc$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mcmc$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mcmc$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mcmc$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Mcmc$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Mcmc$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Mcmc$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Mcmc$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Mcmc$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Mcmc$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Mcmc$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Mcmc$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Mcmc$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Mll", "shortDescription" : "Functions associated with particle filtering of Markov process models against time series data and the computation of marginal model likelihoods.", "object" : "smfsb\/Mll$.html", "members_object" : [{"label" : "pfMll", "tail" : "(simX0: (P) ⇒ Vector[S], t0: Time, stepFun: (P) ⇒ (S, Time, Time) ⇒ S, dataLik: (P) ⇒ (S, O) ⇒ LogLik, data: Ts[O])(arg0: State[S], arg1: Observation[O]): (P) ⇒ LogLik", "member" : "smfsb.Mll.pfMll", "link" : "smfsb\/Mll$.html#pfMll[P,S,O](simX0:P=>Vector[S],t0:smfsb.Types.Time,stepFun:P=>((S,smfsb.Types.Time,smfsb.Types.Time)=>S),dataLik:P=>((S,O)=>smfsb.Types.LogLik),data:smfsb.Types.Ts[O])(implicitevidence$3:smfsb.Types.State[S],implicitevidence$4:smfsb.Types.Observation[O]):P=>smfsb.Types.LogLik", "kind" : "def"}, {"label" : "bpf", "tail" : "(x0: Vector[S], t0: Time, data: Ts[O], dataLik: (S, O) ⇒ LogLik, stepFun: (S, Time, Time) ⇒ S)(arg0: State[S], arg1: Observation[O]): (LogLik, Time, Vector[S])", "member" : "smfsb.Mll.bpf", "link" : "smfsb\/Mll$.html#bpf[S,O](x0:Vector[S],t0:smfsb.Types.Time,data:smfsb.Types.Ts[O],dataLik:(S,O)=>smfsb.Types.LogLik,stepFun:(S,smfsb.Types.Time,smfsb.Types.Time)=>S)(implicitevidence$1:smfsb.Types.State[S],implicitevidence$2:smfsb.Types.Observation[O]):(smfsb.Types.LogLik,smfsb.Types.Time,Vector[S])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Mll$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Mll$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Mll$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Mll$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Mll$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Mll$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Mll$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mll$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mll$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mll$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Mll$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Mll$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Mll$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Mll$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Mll$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Mll$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Mll$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Mll$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Mll$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Sim", "shortDescription" : "Functions for simulating data associated with a Markov process given an appropriate transition kernel.", "object" : "smfsb\/Sim$.html", "members_object" : [{"label" : "toCsv", "tail" : "(ts: Ts[S])(arg0: State[S]): String", "member" : "smfsb.Sim.toCsv", "link" : "smfsb\/Sim$.html#toCsv[S](ts:smfsb.Types.Ts[S])(implicitevidence$5:smfsb.Types.State[S]):String", "kind" : "def"}, {"label" : "plotTs", "tail" : "(ts: Ts[S])(arg0: State[S]): Unit", "member" : "smfsb.Sim.plotTs", "link" : "smfsb\/Sim$.html#plotTs[S](ts:smfsb.Types.Ts[S])(implicitevidence$4:smfsb.Types.State[S]):Unit", "kind" : "def"}, {"label" : "sample", "tail" : "(n: Int, x0: S, t0: Time, deltat: Time, stepFun: (S, Time, Time) ⇒ S)(arg0: State[S]): List[S]", "member" : "smfsb.Sim.sample", "link" : "smfsb\/Sim$.html#sample[S](n:Int,x0:S,t0:smfsb.Types.Time,deltat:smfsb.Types.Time,stepFun:(S,smfsb.Types.Time,smfsb.Types.Time)=>S)(implicitevidence$3:smfsb.Types.State[S]):List[S]", "kind" : "def"}, {"label" : "times", "tail" : "(x0: S, t0: Time, timeList: List[Time], stepFun: (S, Time, Time) ⇒ S)(arg0: State[S]): Ts[S]", "member" : "smfsb.Sim.times", "link" : "smfsb\/Sim$.html#times[S](x0:S,t0:smfsb.Types.Time,timeList:List[smfsb.Types.Time],stepFun:(S,smfsb.Types.Time,smfsb.Types.Time)=>S)(implicitevidence$2:smfsb.Types.State[S]):smfsb.Types.Ts[S]", "kind" : "def"}, {"label" : "ts", "tail" : "(x0: S, t0: Time, tt: Time, dt: Time, stepFun: (S, Time, Time) ⇒ S)(arg0: State[S]): Ts[S]", "member" : "smfsb.Sim.ts", "link" : "smfsb\/Sim$.html#ts[S](x0:S,t0:smfsb.Types.Time,tt:smfsb.Types.Time,dt:smfsb.Types.Time,stepFun:(S,smfsb.Types.Time,smfsb.Types.Time)=>S)(implicitevidence$1:smfsb.Types.State[S]):smfsb.Types.Ts[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Sim$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Sim$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Sim$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Sim$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Sim$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Sim$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Sim$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Sim$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Sim$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Sim$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Sim$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Sim$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Sim$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Sim$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Sim$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Sim$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Sim$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Sim$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Sim$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.SpnModels", "shortDescription" : "Some example SPN models, each of which can be instantiated with eitherdiscrete or continous states.", "object" : "smfsb\/SpnModels$.html", "members_object" : [{"label" : "ar", "tail" : "(c: DenseVector[Double])(arg0: State[S]): Spn[S]", "member" : "smfsb.SpnModels.ar", "link" : "smfsb\/SpnModels$.html#ar[S](c:breeze.linalg.DenseVector[Double])(implicitevidence$4:smfsb.Types.State[S]):smfsb.Types.Spn[S]", "kind" : "def"}, {"label" : "mm", "tail" : "(p: DenseVector[Double])(arg0: State[S]): Spn[S]", "member" : "smfsb.SpnModels.mm", "link" : "smfsb\/SpnModels$.html#mm[S](p:breeze.linalg.DenseVector[Double])(implicitevidence$3:smfsb.Types.State[S]):smfsb.Types.Spn[S]", "kind" : "def"}, {"label" : "id", "tail" : "(p: DenseVector[Double])(arg0: State[S]): Spn[S]", "member" : "smfsb.SpnModels.id", "link" : "smfsb\/SpnModels$.html#id[S](p:breeze.linalg.DenseVector[Double])(implicitevidence$2:smfsb.Types.State[S]):smfsb.Types.Spn[S]", "kind" : "def"}, {"label" : "lv", "tail" : "(p: DenseVector[Double])(arg0: State[S]): Spn[S]", "member" : "smfsb.SpnModels.lv", "link" : "smfsb\/SpnModels$.html#lv[S](p:breeze.linalg.DenseVector[Double])(implicitevidence$1:smfsb.Types.State[S]):smfsb.Types.Spn[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/SpnModels$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/SpnModels$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/SpnModels$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/SpnModels$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/SpnModels$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/SpnModels$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/SpnModels$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/SpnModels$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/SpnModels$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/SpnModels$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/SpnModels$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/SpnModels$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/SpnModels$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/SpnModels$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/SpnModels$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/SpnModels$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/SpnModels$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/SpnModels$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/SpnModels$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Step", "shortDescription" : "Functions which accept a Spn and return a function for simulating from the transition kernel of that model", "object" : "smfsb\/Step$.html", "members_object" : [{"label" : "euler", "tail" : "(n: Spn[DoubleState], dt: Double): (DoubleState, Time, Time) ⇒ DoubleState", "member" : "smfsb.Step.euler", "link" : "smfsb\/Step$.html#euler(n:smfsb.Types.Spn[smfsb.Types.DoubleState],dt:Double):(smfsb.Types.DoubleState,smfsb.Types.Time,smfsb.Types.Time)=>smfsb.Types.DoubleState", "kind" : "def"}, {"label" : "cle", "tail" : "(n: Spn[DoubleState], dt: Double): (DoubleState, Time, Time) ⇒ DoubleState", "member" : "smfsb.Step.cle", "link" : "smfsb\/Step$.html#cle(n:smfsb.Types.Spn[smfsb.Types.DoubleState],dt:Double):(smfsb.Types.DoubleState,smfsb.Types.Time,smfsb.Types.Time)=>smfsb.Types.DoubleState", "kind" : "def"}, {"label" : "pts", "tail" : "(n: Spn[IntState], dt: Double): (IntState, Time, Time) ⇒ IntState", "member" : "smfsb.Step.pts", "link" : "smfsb\/Step$.html#pts(n:smfsb.Types.Spn[smfsb.Types.IntState],dt:Double):(smfsb.Types.IntState,smfsb.Types.Time,smfsb.Types.Time)=>smfsb.Types.IntState", "kind" : "def"}, {"label" : "gillespie", "tail" : "(n: Spn[IntState]): (IntState, Time, Time) ⇒ IntState", "member" : "smfsb.Step.gillespie", "link" : "smfsb\/Step$.html#gillespie(n:smfsb.Types.Spn[smfsb.Types.IntState]):(smfsb.Types.IntState,smfsb.Types.Time,smfsb.Types.Time)=>smfsb.Types.IntState", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Step$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Step$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Step$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Step$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Step$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Step$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Step$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Step$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Step$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Step$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Step$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Step$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Step$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Step$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Step$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Step$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Step$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Step$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Step$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Types", "shortDescription" : "Object containing basic types used throughout the library.", "object" : "smfsb\/Types$.html", "members_object" : [{"label" : "streamThinnable", "tail" : ": Thinnable[Stream]", "member" : "smfsb.Types.streamThinnable", "link" : "smfsb\/Types$.html#streamThinnable:smfsb.Types.Thinnable[Stream]", "kind" : "implicit val"}, {"label" : "ThinnableSyntax", "tail" : "", "member" : "smfsb.Types.ThinnableSyntax", "link" : "smfsb\/Types$.html#ThinnableSyntax[T,F[T]]extendsAnyRef", "kind" : "implicit class"}, {"label" : "Thinnable", "tail" : "", "member" : "smfsb.Types.Thinnable", "link" : "smfsb\/Types$.html#Thinnable[F[_]]extendsAnyRef", "kind" : "trait"}, {"label" : "dvdObs", "tail" : ": Observation[DoubleState]", "member" : "smfsb.Types.dvdObs", "link" : "smfsb\/Types$.html#dvdObs:smfsb.Types.Observation[smfsb.Types.DoubleState]", "kind" : "implicit val"}, {"label" : "dviObs", "tail" : ": Observation[IntState]", "member" : "smfsb.Types.dviObs", "link" : "smfsb\/Types$.html#dviObs:smfsb.Types.Observation[smfsb.Types.IntState]", "kind" : "implicit val"}, {"label" : "Observation", "tail" : "", "member" : "smfsb.Types.Observation", "link" : "smfsb\/Types$.html#Observation[O]extendsTypes.CsvRow[O]", "kind" : "trait"}, {"label" : "tsdsDs", "tail" : ": DataSet[Ts[DoubleState]]", "member" : "smfsb.Types.tsdsDs", "link" : "smfsb\/Types$.html#tsdsDs:smfsb.Types.DataSet[smfsb.Types.Ts[smfsb.Types.DoubleState]]", "kind" : "implicit val"}, {"label" : "tsisDs", "tail" : ": DataSet[Ts[IntState]]", "member" : "smfsb.Types.tsisDs", "link" : "smfsb\/Types$.html#tsisDs:smfsb.Types.DataSet[smfsb.Types.Ts[smfsb.Types.IntState]]", "kind" : "implicit val"}, {"label" : "DataSet", "tail" : "", "member" : "smfsb.Types.DataSet", "link" : "smfsb\/Types$.html#DataSet[D]extendsAnyRef", "kind" : "trait"}, {"label" : "MarkedSpn", "tail" : "", "member" : "smfsb.Types.MarkedSpn", "link" : "smfsb\/Types$.html#MarkedSpn[S]extendsTypes.Spn[S]withProductwithSerializable", "kind" : "case class"}, {"label" : "UnmarkedSpn", "tail" : "", "member" : "smfsb.Types.UnmarkedSpn", "link" : "smfsb\/Types$.html#UnmarkedSpn[S]extendsTypes.Spn[S]withProductwithSerializable", "kind" : "case class"}, {"label" : "Spn", "tail" : "", "member" : "smfsb.Types.Spn", "link" : "smfsb\/Types$.html#Spn[S]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "dvdState", "tail" : ": State[DoubleState]", "member" : "smfsb.Types.dvdState", "link" : "smfsb\/Types$.html#dvdState:smfsb.Types.State[smfsb.Types.DoubleState]", "kind" : "implicit val"}, {"label" : "DoubleState", "tail" : "", "member" : "smfsb.Types.DoubleState", "link" : "smfsb\/Types$.html#DoubleState=breeze.linalg.DenseVector[Double]", "kind" : "type"}, {"label" : "dviState", "tail" : ": State[IntState]", "member" : "smfsb.Types.dviState", "link" : "smfsb\/Types$.html#dviState:smfsb.Types.State[smfsb.Types.IntState]", "kind" : "implicit val"}, {"label" : "IntState", "tail" : "", "member" : "smfsb.Types.IntState", "link" : "smfsb\/Types$.html#IntState=breeze.linalg.DenseVector[Int]", "kind" : "type"}, {"label" : "State", "tail" : "", "member" : "smfsb.Types.State", "link" : "smfsb\/Types$.html#State[S]extendsTypes.CsvRow[S]", "kind" : "trait"}, {"label" : "CsvRowSyntax", "tail" : "", "member" : "smfsb.Types.CsvRowSyntax", "link" : "smfsb\/Types$.html#CsvRowSyntax[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "CsvRow", "tail" : "", "member" : "smfsb.Types.CsvRow", "link" : "smfsb\/Types$.html#CsvRow[T]extendsAnyRef", "kind" : "trait"}, {"label" : "HazardVec", "tail" : "", "member" : "smfsb.Types.HazardVec", "link" : "smfsb\/Types$.html#HazardVec=breeze.linalg.DenseVector[Double]", "kind" : "type"}, {"label" : "LogLik", "tail" : "", "member" : "smfsb.Types.LogLik", "link" : "smfsb\/Types$.html#LogLik=Double", "kind" : "type"}, {"label" : "Ts", "tail" : "", "member" : "smfsb.Types.Ts", "link" : "smfsb\/Types$.html#Ts[S]=List[(smfsb.Types.Time,S)]", "kind" : "type"}, {"label" : "Time", "tail" : "", "member" : "smfsb.Types.Time", "link" : "smfsb\/Types$.html#Time=Double", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Types$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Types$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Types$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Types$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Types$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Types$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Types$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Types$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Types$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Types$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Types$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Types$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Types$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Types$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Types$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Types$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Types$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Types$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Types$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};