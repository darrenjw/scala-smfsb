Index.PACKAGES = {"smfsb" : [{"name" : "smfsb.Abc", "shortDescription" : "", "object" : "smfsb\/Abc$.html", "members_object" : [{"label" : "abcDistance", "tail" : "(model: (P) ⇒ D, distance: (D) ⇒ Double)(th: P)(arg0: Parameter[P], arg1: DataSet[D]): Double", "member" : "smfsb.Abc.abcDistance", "link" : "smfsb\/Abc$.html#abcDistance[P,D](model:P=>D,distance:D=>Double)(th:P)(implicitevidence$1:smfsb.Types.Parameter[P],implicitevidence$2:smfsb.Types.DataSet[D]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Abc$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Abc$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Abc$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Abc$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Abc$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Abc$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Abc$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Abc$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Abc$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Abc$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Abc$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Abc$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Abc$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Abc$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Abc$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Abc$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Abc$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Abc$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Abc$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Mll", "shortDescription" : "", "object" : "smfsb\/Mll$.html", "members_object" : [{"label" : "pfMllP", "tail" : "(n: Int, simx0: (P) ⇒ (Int, Time) ⇒ Vector[S], t0: Time, stepFun: (P) ⇒ (S, Time, Time) ⇒ S, dataLik: (P) ⇒ (S, O) ⇒ LogLik, data: Ts[O])(arg0: State[S], arg1: Parameter[P], arg2: Observation[O]): (P) ⇒ LogLik", "member" : "smfsb.Mll.pfMllP", "link" : "smfsb\/Mll$.html#pfMllP[S,P,O](n:Int,simx0:P=>((Int,smfsb.Types.Time)=>Vector[S]),t0:smfsb.Types.Time,stepFun:P=>((S,smfsb.Types.Time,smfsb.Types.Time)=>S),dataLik:P=>((S,O)=>smfsb.Types.LogLik),data:smfsb.Types.Ts[O])(implicitevidence$6:smfsb.Types.State[S],implicitevidence$7:smfsb.Types.Parameter[P],implicitevidence$8:smfsb.Types.Observation[O]):P=>smfsb.Types.LogLik", "kind" : "def"}, {"label" : "mean", "tail" : "(it: ParSeq[A])(n: Numeric[A]): Double", "member" : "smfsb.Mll.mean", "link" : "smfsb\/Mll$.html#mean[A](it:scala.collection.parallel.immutable.ParSeq[A])(implicitn:spire.math.Numeric[A]):Double", "kind" : "def"}, {"label" : "pfMll", "tail" : "(n: Int, simx0: (P) ⇒ (Int, Time) ⇒ Vector[S], t0: Time, stepFun: (P) ⇒ (S, Time, Time) ⇒ S, dataLik: (P) ⇒ (S, O) ⇒ LogLik, data: Ts[O])(arg0: State[S], arg1: Parameter[P], arg2: Observation[O]): (P) ⇒ LogLik", "member" : "smfsb.Mll.pfMll", "link" : "smfsb\/Mll$.html#pfMll[S,P,O](n:Int,simx0:P=>((Int,smfsb.Types.Time)=>Vector[S]),t0:smfsb.Types.Time,stepFun:P=>((S,smfsb.Types.Time,smfsb.Types.Time)=>S),dataLik:P=>((S,O)=>smfsb.Types.LogLik),data:smfsb.Types.Ts[O])(implicitevidence$3:smfsb.Types.State[S],implicitevidence$4:smfsb.Types.Parameter[P],implicitevidence$5:smfsb.Types.Observation[O]):P=>smfsb.Types.LogLik", "kind" : "def"}, {"label" : "mean", "tail" : "(it: Iterable[T])(arg0: Numeric[T]): Double", "member" : "smfsb.Mll.mean", "link" : "smfsb\/Mll$.html#mean[T](it:Iterable[T])(implicitevidence$2:spire.math.Numeric[T]):Double", "kind" : "def"}, {"label" : "sample", "tail" : "(n: Int, prob: DenseVector[Double]): Vector[Int]", "member" : "smfsb.Mll.sample", "link" : "smfsb\/Mll$.html#sample(n:Int,prob:breeze.linalg.DenseVector[Double]):Vector[Int]", "kind" : "def"}, {"label" : "diff", "tail" : "(l: Iterable[T])(arg0: Fractional[T]): Iterable[T]", "member" : "smfsb.Mll.diff", "link" : "smfsb\/Mll$.html#diff[T](l:Iterable[T])(implicitevidence$1:spire.math.Fractional[T]):Iterable[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Mll$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Mll$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Mll$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Mll$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Mll$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Mll$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Mll$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mll$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mll$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mll$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Mll$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Mll$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Mll$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Mll$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Mll$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Mll$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Mll$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Mll$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Mll$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Pmmh", "shortDescription" : "", "object" : "smfsb\/Pmmh$.html", "members_object" : [{"label" : "runPmmh", "tail" : "(s: Writer, iters: Int, initialState: P, mll: (P) ⇒ LogLik)(arg0: Parameter[P]): List[P]", "member" : "smfsb.Pmmh.runPmmh", "link" : "smfsb\/Pmmh$.html#runPmmh[P](s:java.io.Writer,iters:Int,initialState:P,mll:P=>smfsb.Types.LogLik)(implicitevidence$1:smfsb.Types.Parameter[P]):List[P]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Pmmh$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Pmmh$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Pmmh$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Pmmh$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Pmmh$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Pmmh$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Pmmh$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Pmmh$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Pmmh$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Pmmh$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Pmmh$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Pmmh$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Pmmh$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Pmmh$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Pmmh$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Pmmh$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Pmmh$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Pmmh$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Pmmh$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Sim", "shortDescription" : "", "object" : "smfsb\/Sim$.html", "members_object" : [{"label" : "toCsv", "tail" : "(ts: Ts[S])(arg0: State[S]): String", "member" : "smfsb.Sim.toCsv", "link" : "smfsb\/Sim$.html#toCsv[S](ts:smfsb.Types.Ts[S])(implicitevidence$3:smfsb.Types.State[S]):String", "kind" : "def"}, {"label" : "plotTs", "tail" : "(ts: Ts[S])(arg0: State[S]): Unit", "member" : "smfsb.Sim.plotTs", "link" : "smfsb\/Sim$.html#plotTs[S](ts:smfsb.Types.Ts[S])(implicitevidence$2:smfsb.Types.State[S]):Unit", "kind" : "def"}, {"label" : "simTs", "tail" : "(x0: S, t0: Time, tt: Time, dt: Time, stepFun: (S, Time, Time) ⇒ S)(arg0: State[S]): Ts[S]", "member" : "smfsb.Sim.simTs", "link" : "smfsb\/Sim$.html#simTs[S](x0:S,t0:smfsb.Types.Time,tt:smfsb.Types.Time,dt:smfsb.Types.Time,stepFun:(S,smfsb.Types.Time,smfsb.Types.Time)=>S)(implicitevidence$1:smfsb.Types.State[S]):smfsb.Types.Ts[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Sim$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Sim$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Sim$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Sim$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Sim$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Sim$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Sim$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Sim$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Sim$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Sim$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Sim$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Sim$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Sim$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Sim$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Sim$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Sim$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Sim$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Sim$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Sim$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Spn", "shortDescription" : "", "members_case class" : [{"member" : "smfsb.Spn#<init>", "error" : "unsupported entity"}, {"label" : "h", "tail" : ": (P) ⇒ (S, Time) ⇒ HazardVec", "member" : "smfsb.Spn.h", "link" : "smfsb\/Spn.html#h:P=>((S,smfsb.Types.Time)=>smfsb.Types.HazardVec)", "kind" : "val"}, {"label" : "post", "tail" : ": DenseMatrix[Int]", "member" : "smfsb.Spn.post", "link" : "smfsb\/Spn.html#post:breeze.linalg.DenseMatrix[Int]", "kind" : "val"}, {"label" : "pre", "tail" : ": DenseMatrix[Int]", "member" : "smfsb.Spn.pre", "link" : "smfsb\/Spn.html#pre:breeze.linalg.DenseMatrix[Int]", "kind" : "val"}, {"label" : "species", "tail" : ": List[String]", "member" : "smfsb.Spn.species", "link" : "smfsb\/Spn.html#species:List[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Spn.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Spn.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Spn.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Spn.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Spn.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Spn.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Spn.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Spn.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Spn.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Spn.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Spn.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Spn.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Spn.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Spn.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Spn.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Spn.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smfsb\/Spn.html", "kind" : "case class"}, {"name" : "smfsb.SpnExamples", "shortDescription" : "", "object" : "smfsb\/SpnExamples$.html", "members_object" : [{"label" : "stepLvc", "tail" : ": (LvParameter) ⇒ (DoubleState, Time, Time) ⇒ DoubleState", "member" : "smfsb.SpnExamples.stepLvc", "link" : "smfsb\/SpnExamples$.html#stepLvc:smfsb.SpnExamples.LvParameter=>((smfsb.Types.DoubleState,smfsb.Types.Time,smfsb.Types.Time)=>smfsb.Types.DoubleState)", "kind" : "val"}, {"label" : "lvc", "tail" : ": Spn[LvParameter, DoubleState]", "member" : "smfsb.SpnExamples.lvc", "link" : "smfsb\/SpnExamples$.html#lvc:smfsb.Spn[smfsb.SpnExamples.LvParameter,smfsb.Types.DoubleState]", "kind" : "val"}, {"label" : "stepAr", "tail" : ": (ArParameter) ⇒ (IntState, Time, Time) ⇒ IntState", "member" : "smfsb.SpnExamples.stepAr", "link" : "smfsb\/SpnExamples$.html#stepAr:smfsb.SpnExamples.ArParameter=>((smfsb.Types.IntState,smfsb.Types.Time,smfsb.Types.Time)=>smfsb.Types.IntState)", "kind" : "val"}, {"label" : "ar", "tail" : ": Spn[ArParameter, IntState]", "member" : "smfsb.SpnExamples.ar", "link" : "smfsb\/SpnExamples$.html#ar:smfsb.Spn[smfsb.SpnExamples.ArParameter,smfsb.Types.IntState]", "kind" : "val"}, {"label" : "arparam", "tail" : ": ArParameter", "member" : "smfsb.SpnExamples.arparam", "link" : "smfsb\/SpnExamples$.html#arparam:smfsb.SpnExamples.ArParameter", "kind" : "val"}, {"label" : "arParameter", "tail" : ": Parameter[ArParameter]", "member" : "smfsb.SpnExamples.arParameter", "link" : "smfsb\/SpnExamples$.html#arParameter:smfsb.Types.Parameter[smfsb.SpnExamples.ArParameter]", "kind" : "implicit val"}, {"label" : "ArParameter", "tail" : "", "member" : "smfsb.SpnExamples.ArParameter", "link" : "smfsb\/SpnExamples$.html#ArParameterextendsProductwithSerializable", "kind" : "case class"}, {"label" : "stepMm", "tail" : ": (MmParameter) ⇒ (IntState, Time, Time) ⇒ IntState", "member" : "smfsb.SpnExamples.stepMm", "link" : "smfsb\/SpnExamples$.html#stepMm:smfsb.SpnExamples.MmParameter=>((smfsb.Types.IntState,smfsb.Types.Time,smfsb.Types.Time)=>smfsb.Types.IntState)", "kind" : "val"}, {"label" : "mm", "tail" : ": Spn[MmParameter, IntState]", "member" : "smfsb.SpnExamples.mm", "link" : "smfsb\/SpnExamples$.html#mm:smfsb.Spn[smfsb.SpnExamples.MmParameter,smfsb.Types.IntState]", "kind" : "val"}, {"label" : "mmparam", "tail" : ": MmParameter", "member" : "smfsb.SpnExamples.mmparam", "link" : "smfsb\/SpnExamples$.html#mmparam:smfsb.SpnExamples.MmParameter", "kind" : "val"}, {"label" : "mmParameter", "tail" : ": Parameter[MmParameter]", "member" : "smfsb.SpnExamples.mmParameter", "link" : "smfsb\/SpnExamples$.html#mmParameter:smfsb.Types.Parameter[smfsb.SpnExamples.MmParameter]", "kind" : "implicit val"}, {"label" : "MmParameter", "tail" : "", "member" : "smfsb.SpnExamples.MmParameter", "link" : "smfsb\/SpnExamples$.html#MmParameterextendsProductwithSerializable", "kind" : "case class"}, {"label" : "stepId", "tail" : ": (IdParameter) ⇒ (IntState, Time, Time) ⇒ IntState", "member" : "smfsb.SpnExamples.stepId", "link" : "smfsb\/SpnExamples$.html#stepId:smfsb.SpnExamples.IdParameter=>((smfsb.Types.IntState,smfsb.Types.Time,smfsb.Types.Time)=>smfsb.Types.IntState)", "kind" : "val"}, {"label" : "id", "tail" : ": Spn[IdParameter, IntState]", "member" : "smfsb.SpnExamples.id", "link" : "smfsb\/SpnExamples$.html#id:smfsb.Spn[smfsb.SpnExamples.IdParameter,smfsb.Types.IntState]", "kind" : "val"}, {"label" : "idparam", "tail" : ": IdParameter", "member" : "smfsb.SpnExamples.idparam", "link" : "smfsb\/SpnExamples$.html#idparam:smfsb.SpnExamples.IdParameter", "kind" : "val"}, {"label" : "idParameter", "tail" : ": Parameter[IdParameter]", "member" : "smfsb.SpnExamples.idParameter", "link" : "smfsb\/SpnExamples$.html#idParameter:smfsb.Types.Parameter[smfsb.SpnExamples.IdParameter]", "kind" : "implicit val"}, {"label" : "IdParameter", "tail" : "", "member" : "smfsb.SpnExamples.IdParameter", "link" : "smfsb\/SpnExamples$.html#IdParameterextendsProductwithSerializable", "kind" : "case class"}, {"label" : "stepLvPts", "tail" : ": (LvParameter) ⇒ (IntState, Time, Time) ⇒ IntState", "member" : "smfsb.SpnExamples.stepLvPts", "link" : "smfsb\/SpnExamples$.html#stepLvPts:smfsb.SpnExamples.LvParameter=>((smfsb.Types.IntState,smfsb.Types.Time,smfsb.Types.Time)=>smfsb.Types.IntState)", "kind" : "val"}, {"label" : "stepLv", "tail" : ": (LvParameter) ⇒ (IntState, Time, Time) ⇒ IntState", "member" : "smfsb.SpnExamples.stepLv", "link" : "smfsb\/SpnExamples$.html#stepLv:smfsb.SpnExamples.LvParameter=>((smfsb.Types.IntState,smfsb.Types.Time,smfsb.Types.Time)=>smfsb.Types.IntState)", "kind" : "val"}, {"label" : "lv", "tail" : ": Spn[LvParameter, IntState]", "member" : "smfsb.SpnExamples.lv", "link" : "smfsb\/SpnExamples$.html#lv:smfsb.Spn[smfsb.SpnExamples.LvParameter,smfsb.Types.IntState]", "kind" : "val"}, {"label" : "lvparam", "tail" : ": LvParameter", "member" : "smfsb.SpnExamples.lvparam", "link" : "smfsb\/SpnExamples$.html#lvparam:smfsb.SpnExamples.LvParameter", "kind" : "val"}, {"label" : "lvParameter", "tail" : ": Parameter[LvParameter]", "member" : "smfsb.SpnExamples.lvParameter", "link" : "smfsb\/SpnExamples$.html#lvParameter:smfsb.Types.Parameter[smfsb.SpnExamples.LvParameter]", "kind" : "implicit val"}, {"label" : "LvParameter", "tail" : "", "member" : "smfsb.SpnExamples.LvParameter", "link" : "smfsb\/SpnExamples$.html#LvParameterextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/SpnExamples$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/SpnExamples$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/SpnExamples$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/SpnExamples$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/SpnExamples$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/SpnExamples$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/SpnExamples$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/SpnExamples$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/SpnExamples$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/SpnExamples$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/SpnExamples$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/SpnExamples$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/SpnExamples$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/SpnExamples$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/SpnExamples$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/SpnExamples$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/SpnExamples$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/SpnExamples$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/SpnExamples$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Step", "shortDescription" : "", "object" : "smfsb\/Step$.html", "members_object" : [{"label" : "cle", "tail" : "(n: Spn[P, DoubleState], dt: Double)(arg0: Parameter[P]): (P) ⇒ (DoubleState, Time, Time) ⇒ DoubleState", "member" : "smfsb.Step.cle", "link" : "smfsb\/Step$.html#cle[P](n:smfsb.Spn[P,smfsb.Types.DoubleState],dt:Double)(implicitevidence$3:smfsb.Types.Parameter[P]):P=>((smfsb.Types.DoubleState,smfsb.Types.Time,smfsb.Types.Time)=>smfsb.Types.DoubleState)", "kind" : "def"}, {"label" : "pts", "tail" : "(n: Spn[P, IntState], dt: Double)(arg0: Parameter[P]): (P) ⇒ (IntState, Time, Time) ⇒ IntState", "member" : "smfsb.Step.pts", "link" : "smfsb\/Step$.html#pts[P](n:smfsb.Spn[P,smfsb.Types.IntState],dt:Double)(implicitevidence$2:smfsb.Types.Parameter[P]):P=>((smfsb.Types.IntState,smfsb.Types.Time,smfsb.Types.Time)=>smfsb.Types.IntState)", "kind" : "def"}, {"label" : "myPoisson", "tail" : "(mean: Double): Int", "member" : "smfsb.Step.myPoisson", "link" : "smfsb\/Step$.html#myPoisson(mean:Double):Int", "kind" : "def"}, {"label" : "gillespie", "tail" : "(n: Spn[P, IntState])(arg0: Parameter[P]): (P) ⇒ (IntState, Time, Time) ⇒ IntState", "member" : "smfsb.Step.gillespie", "link" : "smfsb\/Step$.html#gillespie[P](n:smfsb.Spn[P,smfsb.Types.IntState])(implicitevidence$1:smfsb.Types.Parameter[P]):P=>((smfsb.Types.IntState,smfsb.Types.Time,smfsb.Types.Time)=>smfsb.Types.IntState)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Step$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Step$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Step$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Step$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Step$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Step$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Step$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Step$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Step$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Step$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Step$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Step$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Step$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Step$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Step$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Step$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Step$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Step$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Step$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Types", "shortDescription" : "", "object" : "smfsb\/Types$.html", "members_object" : [{"label" : "tsdsDs", "tail" : ": DataSet[Ts[DoubleState]]", "member" : "smfsb.Types.tsdsDs", "link" : "smfsb\/Types$.html#tsdsDs:smfsb.Types.DataSet[smfsb.Types.Ts[smfsb.Types.DoubleState]]", "kind" : "implicit val"}, {"label" : "tsisDs", "tail" : ": DataSet[Ts[IntState]]", "member" : "smfsb.Types.tsisDs", "link" : "smfsb\/Types$.html#tsisDs:smfsb.Types.DataSet[smfsb.Types.Ts[smfsb.Types.IntState]]", "kind" : "implicit val"}, {"label" : "DataSet", "tail" : "", "member" : "smfsb.Types.DataSet", "link" : "smfsb\/Types$.html#DataSet[D]extendsAnyRef", "kind" : "trait"}, {"label" : "dvdObs", "tail" : ": Observation[DoubleState]", "member" : "smfsb.Types.dvdObs", "link" : "smfsb\/Types$.html#dvdObs:smfsb.Types.Observation[smfsb.Types.DoubleState]", "kind" : "implicit val"}, {"label" : "dviObs", "tail" : ": Observation[IntState]", "member" : "smfsb.Types.dviObs", "link" : "smfsb\/Types$.html#dviObs:smfsb.Types.Observation[smfsb.Types.IntState]", "kind" : "implicit val"}, {"label" : "Observation", "tail" : "", "member" : "smfsb.Types.Observation", "link" : "smfsb\/Types$.html#Observation[O]extendsTypes.CsvRow[O]", "kind" : "trait"}, {"label" : "dvdState", "tail" : ": State[DoubleState]", "member" : "smfsb.Types.dvdState", "link" : "smfsb\/Types$.html#dvdState:smfsb.Types.State[smfsb.Types.DoubleState]", "kind" : "implicit val"}, {"label" : "DoubleState", "tail" : "", "member" : "smfsb.Types.DoubleState", "link" : "smfsb\/Types$.html#DoubleState=breeze.linalg.DenseVector[Double]", "kind" : "type"}, {"label" : "dviState", "tail" : ": State[IntState]", "member" : "smfsb.Types.dviState", "link" : "smfsb\/Types$.html#dviState:smfsb.Types.State[smfsb.Types.IntState]", "kind" : "implicit val"}, {"label" : "IntState", "tail" : "", "member" : "smfsb.Types.IntState", "link" : "smfsb\/Types$.html#IntState=breeze.linalg.DenseVector[Int]", "kind" : "type"}, {"label" : "State", "tail" : "", "member" : "smfsb.Types.State", "link" : "smfsb\/Types$.html#State[S]extendsTypes.CsvRow[S]", "kind" : "trait"}, {"label" : "ParameterSyntax", "tail" : "", "member" : "smfsb.Types.ParameterSyntax", "link" : "smfsb\/Types$.html#ParameterSyntax[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "Parameter", "tail" : "", "member" : "smfsb.Types.Parameter", "link" : "smfsb\/Types$.html#Parameter[T]extendsTypes.CsvRow[T]", "kind" : "trait"}, {"label" : "CsvRowSyntax", "tail" : "", "member" : "smfsb.Types.CsvRowSyntax", "link" : "smfsb\/Types$.html#CsvRowSyntax[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "CsvRow", "tail" : "", "member" : "smfsb.Types.CsvRow", "link" : "smfsb\/Types$.html#CsvRow[T]extendsAnyRef", "kind" : "trait"}, {"label" : "HazardVec", "tail" : "", "member" : "smfsb.Types.HazardVec", "link" : "smfsb\/Types$.html#HazardVec=breeze.linalg.DenseVector[Double]", "kind" : "type"}, {"label" : "LogLik", "tail" : "", "member" : "smfsb.Types.LogLik", "link" : "smfsb\/Types$.html#LogLik=Double", "kind" : "type"}, {"label" : "Ts", "tail" : "", "member" : "smfsb.Types.Ts", "link" : "smfsb\/Types$.html#Ts[S]=List[(smfsb.Types.Time,S)]", "kind" : "type"}, {"label" : "Time", "tail" : "", "member" : "smfsb.Types.Time", "link" : "smfsb\/Types$.html#Time=Double", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Types$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Types$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Types$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Types$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Types$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Types$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Types$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Types$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Types$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Types$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Types$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Types$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Types$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Types$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Types$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Types$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Types$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Types$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Types$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};