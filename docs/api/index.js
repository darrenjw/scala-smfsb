Index.PACKAGES = {"scala" : [], "scala.collection" : [], "scala.collection.compat" : [], "smfsb" : [{"name" : "smfsb.Abc", "shortDescription" : "Functions for parameter inference using ABC (and ABC-SMC) methods", "object" : "smfsb\/Abc$.html", "members_object" : [{"label" : "summary", "tail" : "(output: GenSeq[(P, D)])(arg0: CsvRow[P]): Unit", "member" : "smfsb.Abc.summary", "link" : "smfsb\/Abc$.html#summary[P,D](output:scala.collection.GenSeq[(P,D)])(implicitevidence$1:smfsb.CsvRow[P]):Unit", "kind" : "def"}, {"label" : "smc", "tail" : "(N: Int, rprior: ⇒ P, dprior: (P) ⇒ LogLik, rdist: (P) ⇒ Double, rperturb: (P) ⇒ P, dperturb: (P, P) ⇒ LogLik, factor: Int, steps: Int, verb: Boolean): GenSeq[P]", "member" : "smfsb.Abc.smc", "link" : "smfsb\/Abc$.html#smc[P](N:Int,rprior:=>P,dprior:P=>smfsb.LogLik,rdist:P=>Double,rperturb:P=>P,dperturb:(P,P)=>smfsb.LogLik,factor:Int,steps:Int,verb:Boolean):scala.collection.GenSeq[P]", "kind" : "def"}, {"label" : "run", "tail" : "(n: Int, rprior: ⇒ P, dist: (P) ⇒ D): GenSeq[(P, D)]", "member" : "smfsb.Abc.run", "link" : "smfsb\/Abc$.html#run[P,D](n:Int,rprior:=>P,dist:P=>D):scala.collection.GenSeq[(P,D)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Abc$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Abc$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Abc$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Abc$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Abc$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Abc$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Abc$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Abc$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Abc$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Abc$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Abc$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Abc$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Abc$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Abc$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Abc$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Abc$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Abc$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Abc$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Abc$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.CsvRow", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/package$$CsvRow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/package$$CsvRow.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/package$$CsvRow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/package$$CsvRow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/package$$CsvRow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/package$$CsvRow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/package$$CsvRow.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$CsvRow.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$CsvRow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$CsvRow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/package$$CsvRow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/package$$CsvRow.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/package$$CsvRow.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/package$$CsvRow.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/package$$CsvRow.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/package$$CsvRow.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/package$$CsvRow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/package$$CsvRow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/package$$CsvRow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toDvd", "tail" : "(value: T): DenseVector[Double]", "member" : "smfsb.CsvRow.toDvd", "link" : "smfsb\/package$$CsvRow.html#toDvd(value:T):breeze.linalg.DenseVector[Double]", "kind" : "abstract def"}, {"label" : "toCsv", "tail" : "(value: T): String", "member" : "smfsb.CsvRow.toCsv", "link" : "smfsb\/package$$CsvRow.html#toCsv(value:T):String", "kind" : "abstract def"}], "shortDescription" : "Type class for vectors that can be rendered to a CSV string (and a Breeze DenseVector[Double]), extended by State", "trait" : "smfsb\/package$$CsvRow.html", "kind" : "trait"}, {"name" : "smfsb.CsvRowSyntax", "shortDescription" : "Syntax for CsvRow", "members_class" : [{"label" : "toDvd", "tail" : "(inst: CsvRow[T]): DenseVector[Double]", "member" : "smfsb.CsvRowSyntax.toDvd", "link" : "smfsb\/package$$CsvRowSyntax.html#toDvd(implicitinst:smfsb.package.CsvRow[T]):breeze.linalg.DenseVector[Double]", "kind" : "def"}, {"label" : "toCsv", "tail" : "(inst: CsvRow[T]): String", "member" : "smfsb.CsvRowSyntax.toCsv", "link" : "smfsb\/package$$CsvRowSyntax.html#toCsv(implicitinst:smfsb.package.CsvRow[T]):String", "kind" : "def"}, {"member" : "smfsb.CsvRowSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/package$$CsvRowSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/package$$CsvRowSyntax.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/package$$CsvRowSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/package$$CsvRowSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/package$$CsvRowSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/package$$CsvRowSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/package$$CsvRowSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$CsvRowSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$CsvRowSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$CsvRowSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/package$$CsvRowSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/package$$CsvRowSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/package$$CsvRowSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/package$$CsvRowSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/package$$CsvRowSyntax.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/package$$CsvRowSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/package$$CsvRowSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/package$$CsvRowSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/package$$CsvRowSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "smfsb\/package$$CsvRowSyntax.html", "kind" : "class"}, {"name" : "smfsb.DataSet", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/package$$DataSet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/package$$DataSet.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/package$$DataSet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/package$$DataSet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/package$$DataSet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/package$$DataSet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/package$$DataSet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$DataSet.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$DataSet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$DataSet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/package$$DataSet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/package$$DataSet.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/package$$DataSet.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/package$$DataSet.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/package$$DataSet.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/package$$DataSet.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/package$$DataSet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/package$$DataSet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/package$$DataSet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Data set type class, for ABC methods", "trait" : "smfsb\/package$$DataSet.html", "kind" : "trait"}, {"name" : "smfsb.MarkedSpn", "shortDescription" : "Case class for SPNs that include an initial marking", "members_case class" : [{"member" : "smfsb.MarkedSpn#<init>", "error" : "unsupported entity"}, {"label" : "h", "tail" : ": (S, Time) ⇒ HazardVec", "member" : "smfsb.MarkedSpn.h", "link" : "smfsb\/package$$MarkedSpn.html#h:(S,smfsb.package.Time)=>smfsb.package.HazardVec", "kind" : "val"}, {"label" : "post", "tail" : ": DenseMatrix[Int]", "member" : "smfsb.MarkedSpn.post", "link" : "smfsb\/package$$MarkedSpn.html#post:breeze.linalg.DenseMatrix[Int]", "kind" : "val"}, {"label" : "pre", "tail" : ": DenseMatrix[Int]", "member" : "smfsb.MarkedSpn.pre", "link" : "smfsb\/package$$MarkedSpn.html#pre:breeze.linalg.DenseMatrix[Int]", "kind" : "val"}, {"label" : "m", "tail" : ": S", "member" : "smfsb.MarkedSpn.m", "link" : "smfsb\/package$$MarkedSpn.html#m:S", "kind" : "val"}, {"label" : "species", "tail" : ": List[String]", "member" : "smfsb.MarkedSpn.species", "link" : "smfsb\/package$$MarkedSpn.html#species:List[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/package$$MarkedSpn.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/package$$MarkedSpn.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/package$$MarkedSpn.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/package$$MarkedSpn.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/package$$MarkedSpn.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/package$$MarkedSpn.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/package$$MarkedSpn.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$MarkedSpn.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$MarkedSpn.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$MarkedSpn.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/package$$MarkedSpn.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/package$$MarkedSpn.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/package$$MarkedSpn.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/package$$MarkedSpn.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/package$$MarkedSpn.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/package$$MarkedSpn.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smfsb\/package$$MarkedSpn.html", "kind" : "case class"}, {"name" : "smfsb.Mcmc", "shortDescription" : "Functions for constucting generic Metropolis-Hastings MCMC algorithms, and associated utilities.", "object" : "smfsb\/Mcmc$.html", "members_object" : [{"label" : "summary", "tail" : "(s: GenSeq[P], plot: Boolean)(arg0: CsvRow[P]): Unit", "member" : "smfsb.Mcmc.summary", "link" : "smfsb\/Mcmc$.html#summary[P](s:scala.collection.GenSeq[P],plot:Boolean)(implicitevidence$2:smfsb.CsvRow[P]):Unit", "kind" : "def"}, {"label" : "summary", "tail" : "(m: DenseMatrix[Double], plt: Boolean, lm: Int): Unit", "member" : "smfsb.Mcmc.summary", "link" : "smfsb\/Mcmc$.html#summary(m:breeze.linalg.DenseMatrix[Double],plt:Boolean,lm:Int):Unit", "kind" : "def"}, {"label" : "acf", "tail" : "(x: Seq[Double], lm: Int): DenseVector[Double]", "member" : "smfsb.Mcmc.acf", "link" : "smfsb\/Mcmc$.html#acf(x:Seq[Double],lm:Int):breeze.linalg.DenseVector[Double]", "kind" : "def"}, {"label" : "toDMD", "tail" : "(s: GenSeq[P])(arg0: CsvRow[P]): DenseMatrix[Double]", "member" : "smfsb.Mcmc.toDMD", "link" : "smfsb\/Mcmc$.html#toDMD[P](s:scala.collection.GenSeq[P])(implicitevidence$1:smfsb.CsvRow[P]):breeze.linalg.DenseMatrix[Double]", "kind" : "def"}, {"label" : "mhStream", "tail" : "(init: P, logLik: (P) ⇒ LogLik, rprop: (P) ⇒ P, dprop: (P, P) ⇒ LogLik, dprior: (P) ⇒ LogLik, verb: Boolean): Stream[P]", "member" : "smfsb.Mcmc.mhStream", "link" : "smfsb\/Mcmc$.html#mhStream[P](init:P,logLik:P=>smfsb.LogLik,rprop:P=>P,dprop:(P,P)=>smfsb.LogLik,dprior:P=>smfsb.LogLik,verb:Boolean):Stream[P]", "kind" : "def"}, {"label" : "nextValue", "tail" : "(logLik: (P) ⇒ LogLik, rprop: (P) ⇒ P, dprop: (P, P) ⇒ LogLik, dprior: (P) ⇒ LogLik, verb: Boolean)(current: (P, LogLik)): (P, LogLik)", "member" : "smfsb.Mcmc.nextValue", "link" : "smfsb\/Mcmc$.html#nextValue[P](logLik:P=>smfsb.LogLik,rprop:P=>P,dprop:(P,P)=>smfsb.LogLik,dprior:P=>smfsb.LogLik,verb:Boolean)(current:(P,smfsb.LogLik)):(P,smfsb.LogLik)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Mcmc$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Mcmc$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Mcmc$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Mcmc$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Mcmc$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Mcmc$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Mcmc$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mcmc$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mcmc$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mcmc$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Mcmc$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Mcmc$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Mcmc$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Mcmc$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Mcmc$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Mcmc$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Mcmc$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Mcmc$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Mcmc$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Mll", "shortDescription" : "Functions associated with particle filtering of Markov process models against time series data and the computation of marginal model likelihoods.", "object" : "smfsb\/Mll$.html", "members_object" : [{"label" : "pfMll", "tail" : "(simX0: (P) ⇒ Vector[S], t0: Time, stepFun: (P) ⇒ (S, Time, Time) ⇒ S, dataLik: (P) ⇒ (S, O) ⇒ LogLik, data: Ts[O])(arg0: State[S]): (P) ⇒ LogLik", "member" : "smfsb.Mll.pfMll", "link" : "smfsb\/Mll$.html#pfMll[P,S,O](simX0:P=>Vector[S],t0:smfsb.Time,stepFun:P=>((S,smfsb.Time,smfsb.Time)=>S),dataLik:P=>((S,O)=>smfsb.LogLik),data:smfsb.Ts[O])(implicitevidence$2:smfsb.State[S]):P=>smfsb.LogLik", "kind" : "def"}, {"label" : "bpf", "tail" : "(x0: Vector[S], t0: Time, data: Ts[O], dataLik: (S, O) ⇒ LogLik, stepFun: (S, Time, Time) ⇒ S)(arg0: State[S]): (LogLik, Time, Vector[S])", "member" : "smfsb.Mll.bpf", "link" : "smfsb\/Mll$.html#bpf[S,O](x0:Vector[S],t0:smfsb.Time,data:smfsb.Ts[O],dataLik:(S,O)=>smfsb.LogLik,stepFun:(S,smfsb.Time,smfsb.Time)=>S)(implicitevidence$1:smfsb.State[S]):(smfsb.LogLik,smfsb.Time,Vector[S])", "kind" : "def"}, {"label" : "sample", "tail" : "(n: Int, prob: DenseVector[Double]): Vector[Int]", "member" : "smfsb.Mll.sample", "link" : "smfsb\/Mll$.html#sample(n:Int,prob:breeze.linalg.DenseVector[Double]):Vector[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Mll$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Mll$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Mll$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Mll$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Mll$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Mll$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Mll$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mll$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mll$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Mll$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Mll$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Mll$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Mll$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Mll$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Mll$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Mll$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Mll$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Mll$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Mll$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.PMatrix", "shortDescription" : "Comonadic pointed 2d image\/matrix type (parallel implementation), used bythe spatial simulation functions.", "object" : "smfsb\/package$$PMatrix$.html", "members_object" : [{"label" : "fromBDM", "tail" : "(m: DenseMatrix[T]): PMatrix[T]", "member" : "smfsb.PMatrix.fromBDM", "link" : "smfsb\/package$$PMatrix$.html#fromBDM[T](m:breeze.linalg.DenseMatrix[T]):smfsb.package.PMatrix[T]", "kind" : "def"}, {"label" : "toBDM", "tail" : "(m: PMatrix[Double]): DenseMatrix[Double]", "member" : "smfsb.PMatrix.toBDM", "link" : "smfsb\/package$$PMatrix$.html#toBDM(m:smfsb.package.PMatrix[Double]):breeze.linalg.DenseMatrix[Double]", "kind" : "def"}, {"label" : "apply", "tail" : "(r: Int, c: Int, data: GenSeq[T]): PMatrix[T]", "member" : "smfsb.PMatrix.apply", "link" : "smfsb\/package$$PMatrix$.html#apply[T](r:Int,c:Int,data:scala.collection.GenSeq[T]):smfsb.package.PMatrix[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/package$$PMatrix$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/package$$PMatrix$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/package$$PMatrix$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/package$$PMatrix$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/package$$PMatrix$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/package$$PMatrix$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/package$$PMatrix$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$PMatrix$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$PMatrix$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$PMatrix$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/package$$PMatrix$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/package$$PMatrix$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/package$$PMatrix$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/package$$PMatrix$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/package$$PMatrix$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/package$$PMatrix$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/package$$PMatrix$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "right", "tail" : "(): PMatrix[T]", "member" : "smfsb.PMatrix.right", "link" : "smfsb\/package$$PMatrix.html#right:smfsb.package.PMatrix[T]", "kind" : "def"}, {"label" : "left", "tail" : "(): PMatrix[T]", "member" : "smfsb.PMatrix.left", "link" : "smfsb\/package$$PMatrix.html#left:smfsb.package.PMatrix[T]", "kind" : "def"}, {"label" : "down", "tail" : "(): PMatrix[T]", "member" : "smfsb.PMatrix.down", "link" : "smfsb\/package$$PMatrix.html#down:smfsb.package.PMatrix[T]", "kind" : "def"}, {"label" : "up", "tail" : "(): PMatrix[T]", "member" : "smfsb.PMatrix.up", "link" : "smfsb\/package$$PMatrix.html#up:smfsb.package.PMatrix[T]", "kind" : "def"}, {"label" : "coflatMap", "tail" : "(f: (PMatrix[T]) ⇒ S): PMatrix[S]", "member" : "smfsb.PMatrix.coflatMap", "link" : "smfsb\/package$$PMatrix.html#coflatMap[S](f:smfsb.package.PMatrix[T]=>S):smfsb.package.PMatrix[S]", "kind" : "def"}, {"label" : "extract", "tail" : "(): T", "member" : "smfsb.PMatrix.extract", "link" : "smfsb\/package$$PMatrix.html#extract:T", "kind" : "def"}, {"label" : "zip", "tail" : "(m: PMatrix[S]): PMatrix[(T, S)]", "member" : "smfsb.PMatrix.zip", "link" : "smfsb\/package$$PMatrix.html#zip[S](m:smfsb.package.PMatrix[S]):smfsb.package.PMatrix[(T,S)]", "kind" : "def"}, {"label" : "updated", "tail" : "(x: Int, y: Int, value: T): PMatrix[T]", "member" : "smfsb.PMatrix.updated", "link" : "smfsb\/package$$PMatrix.html#updated(x:Int,y:Int,value:T):smfsb.package.PMatrix[T]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ S): PMatrix[S]", "member" : "smfsb.PMatrix.map", "link" : "smfsb\/package$$PMatrix.html#map[S](f:T=>S):smfsb.package.PMatrix[S]", "kind" : "def"}, {"label" : "apply", "tail" : "(x: Int, y: Int): T", "member" : "smfsb.PMatrix.apply", "link" : "smfsb\/package$$PMatrix.html#apply(x:Int,y:Int):T", "kind" : "def"}, {"member" : "smfsb.PMatrix#<init>", "error" : "unsupported entity"}, {"label" : "data", "tail" : ": ParVector[T]", "member" : "smfsb.PMatrix.data", "link" : "smfsb\/package$$PMatrix.html#data:scala.collection.parallel.immutable.ParVector[T]", "kind" : "val"}, {"label" : "c", "tail" : ": Int", "member" : "smfsb.PMatrix.c", "link" : "smfsb\/package$$PMatrix.html#c:Int", "kind" : "val"}, {"label" : "r", "tail" : ": Int", "member" : "smfsb.PMatrix.r", "link" : "smfsb\/package$$PMatrix.html#r:Int", "kind" : "val"}, {"label" : "y", "tail" : ": Int", "member" : "smfsb.PMatrix.y", "link" : "smfsb\/package$$PMatrix.html#y:Int", "kind" : "val"}, {"label" : "x", "tail" : ": Int", "member" : "smfsb.PMatrix.x", "link" : "smfsb\/package$$PMatrix.html#x:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/package$$PMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/package$$PMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/package$$PMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/package$$PMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/package$$PMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/package$$PMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/package$$PMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$PMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$PMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$PMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/package$$PMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/package$$PMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/package$$PMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/package$$PMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/package$$PMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/package$$PMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smfsb\/package$$PMatrix.html", "kind" : "case class"}, {"name" : "smfsb.PVector", "shortDescription" : "Comonadic pointed vector type (parallel implementation), used bythe spatial simulation functions.", "members_case class" : [{"label" : "back", "tail" : "(): PVector[T]", "member" : "smfsb.PVector.back", "link" : "smfsb\/package$$PVector.html#back:smfsb.package.PVector[T]", "kind" : "def"}, {"label" : "forward", "tail" : "(): PVector[T]", "member" : "smfsb.PVector.forward", "link" : "smfsb\/package$$PVector.html#forward:smfsb.package.PVector[T]", "kind" : "def"}, {"label" : "coflatMap", "tail" : "(f: (PVector[T]) ⇒ S): PVector[S]", "member" : "smfsb.PVector.coflatMap", "link" : "smfsb\/package$$PVector.html#coflatMap[S](f:smfsb.package.PVector[T]=>S):smfsb.package.PVector[S]", "kind" : "def"}, {"label" : "extract", "tail" : "(): T", "member" : "smfsb.PVector.extract", "link" : "smfsb\/package$$PVector.html#extract:T", "kind" : "def"}, {"label" : "length", "tail" : ": Int", "member" : "smfsb.PVector.length", "link" : "smfsb\/package$$PVector.html#length:Int", "kind" : "val"}, {"label" : "zip", "tail" : "(y: PVector[S]): PVector[(T, S)]", "member" : "smfsb.PVector.zip", "link" : "smfsb\/package$$PVector.html#zip[S](y:smfsb.package.PVector[S]):smfsb.package.PVector[(T,S)]", "kind" : "def"}, {"label" : "updated", "tail" : "(x: Int, value: T): PVector[T]", "member" : "smfsb.PVector.updated", "link" : "smfsb\/package$$PVector.html#updated(x:Int,value:T):smfsb.package.PVector[T]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ S): PVector[S]", "member" : "smfsb.PVector.map", "link" : "smfsb\/package$$PVector.html#map[S](f:T=>S):smfsb.package.PVector[S]", "kind" : "def"}, {"label" : "apply", "tail" : "(x: Int): T", "member" : "smfsb.PVector.apply", "link" : "smfsb\/package$$PVector.html#apply(x:Int):T", "kind" : "def"}, {"member" : "smfsb.PVector#<init>", "error" : "unsupported entity"}, {"label" : "vec", "tail" : ": ParVector[T]", "member" : "smfsb.PVector.vec", "link" : "smfsb\/package$$PVector.html#vec:scala.collection.parallel.immutable.ParVector[T]", "kind" : "val"}, {"label" : "cur", "tail" : ": Int", "member" : "smfsb.PVector.cur", "link" : "smfsb\/package$$PVector.html#cur:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/package$$PVector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/package$$PVector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/package$$PVector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/package$$PVector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/package$$PVector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/package$$PVector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/package$$PVector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$PVector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$PVector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$PVector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/package$$PVector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/package$$PVector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/package$$PVector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/package$$PVector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/package$$PVector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/package$$PVector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smfsb\/package$$PVector.html", "kind" : "case class"}, {"name" : "smfsb.Sim", "shortDescription" : "Functions for simulating data associated with a Markov process given an appropriate transition kernel.", "object" : "smfsb\/Sim$.html", "members_object" : [{"label" : "toCsv", "tail" : "(ts: Ts[S])(arg0: State[S]): String", "member" : "smfsb.Sim.toCsv", "link" : "smfsb\/Sim$.html#toCsv[S](ts:smfsb.Ts[S])(implicitevidence$4:smfsb.State[S]):String", "kind" : "def"}, {"label" : "plotTs", "tail" : "(ts: Ts[S], title: String)(arg0: State[S]): Unit", "member" : "smfsb.Sim.plotTs", "link" : "smfsb\/Sim$.html#plotTs[S](ts:smfsb.Ts[S],title:String)(implicitevidence$3:smfsb.State[S]):Unit", "kind" : "def"}, {"label" : "sample", "tail" : "(n: Int, x0: S, t0: Time, deltat: Time, stepFun: (S, Time, Time) ⇒ S)(arg0: State[S]): List[S]", "member" : "smfsb.Sim.sample", "link" : "smfsb\/Sim$.html#sample[S](n:Int,x0:S,t0:smfsb.Time,deltat:smfsb.Time,stepFun:(S,smfsb.Time,smfsb.Time)=>S)(implicitevidence$2:smfsb.State[S]):List[S]", "kind" : "def"}, {"label" : "times", "tail" : "(x0: S, t0: Time, timeList: List[Time], stepFun: (S, Time, Time) ⇒ S)(arg0: State[S]): Ts[S]", "member" : "smfsb.Sim.times", "link" : "smfsb\/Sim$.html#times[S](x0:S,t0:smfsb.Time,timeList:List[smfsb.Time],stepFun:(S,smfsb.Time,smfsb.Time)=>S)(implicitevidence$1:smfsb.State[S]):smfsb.Ts[S]", "kind" : "def"}, {"label" : "ts", "tail" : "(x0: S, t0: Time, tt: Time, dt: Time, stepFun: (S, Time, Time) ⇒ S): Ts[S]", "member" : "smfsb.Sim.ts", "link" : "smfsb\/Sim$.html#ts[S](x0:S,t0:smfsb.Time,tt:smfsb.Time,dt:smfsb.Time,stepFun:(S,smfsb.Time,smfsb.Time)=>S):smfsb.Ts[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Sim$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Sim$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Sim$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Sim$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Sim$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Sim$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Sim$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Sim$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Sim$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Sim$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Sim$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Sim$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Sim$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Sim$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Sim$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Sim$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Sim$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Sim$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Sim$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Spatial", "shortDescription" : "All functions and utilities relating to spatial simulation", "object" : "smfsb\/Spatial$.html", "members_object" : [{"label" : "plotTs1d", "tail" : "(ts: Ts[GenSeq[S]])(arg0: State[S]): Unit", "member" : "smfsb.Spatial.plotTs1d", "link" : "smfsb\/Spatial$.html#plotTs1d[S](ts:smfsb.Ts[scala.collection.GenSeq[S]])(implicitevidence$1:smfsb.State[S]):Unit", "kind" : "def"}, {"label" : "euler2d", "tail" : "(n: Spn[DoubleState], d: DoubleState, dt: Double): (PMatrix[DoubleState], Time, Time) ⇒ PMatrix[DoubleState]", "member" : "smfsb.Spatial.euler2d", "link" : "smfsb\/Spatial$.html#euler2d(n:smfsb.Spn[smfsb.DoubleState],d:smfsb.DoubleState,dt:Double):(smfsb.PMatrix[smfsb.DoubleState],smfsb.Time,smfsb.Time)=>smfsb.PMatrix[smfsb.DoubleState]", "kind" : "def"}, {"label" : "cle2d", "tail" : "(n: Spn[DoubleState], d: DoubleState, dt: Double): (PMatrix[DoubleState], Time, Time) ⇒ PMatrix[DoubleState]", "member" : "smfsb.Spatial.cle2d", "link" : "smfsb\/Spatial$.html#cle2d(n:smfsb.Spn[smfsb.DoubleState],d:smfsb.DoubleState,dt:Double):(smfsb.PMatrix[smfsb.DoubleState],smfsb.Time,smfsb.Time)=>smfsb.PMatrix[smfsb.DoubleState]", "kind" : "def"}, {"label" : "euler1d", "tail" : "(n: Spn[DoubleState], d: DoubleState, dt: Double): (GenSeq[DoubleState], Time, Time) ⇒ GenSeq[DoubleState]", "member" : "smfsb.Spatial.euler1d", "link" : "smfsb\/Spatial$.html#euler1d(n:smfsb.Spn[smfsb.DoubleState],d:smfsb.DoubleState,dt:Double):(scala.collection.GenSeq[smfsb.DoubleState],smfsb.Time,smfsb.Time)=>scala.collection.GenSeq[smfsb.DoubleState]", "kind" : "def"}, {"label" : "cle1d", "tail" : "(n: Spn[DoubleState], d: DoubleState, dt: Double): (GenSeq[DoubleState], Time, Time) ⇒ GenSeq[DoubleState]", "member" : "smfsb.Spatial.cle1d", "link" : "smfsb\/Spatial$.html#cle1d(n:smfsb.Spn[smfsb.DoubleState],d:smfsb.DoubleState,dt:Double):(scala.collection.GenSeq[smfsb.DoubleState],smfsb.Time,smfsb.Time)=>scala.collection.GenSeq[smfsb.DoubleState]", "kind" : "def"}, {"label" : "gillespie2d", "tail" : "(n: Spn[IntState], d: DoubleState, minH: Double, maxH: Double): (PMatrix[IntState], Time, Time) ⇒ PMatrix[IntState]", "member" : "smfsb.Spatial.gillespie2d", "link" : "smfsb\/Spatial$.html#gillespie2d(n:smfsb.Spn[smfsb.IntState],d:smfsb.DoubleState,minH:Double,maxH:Double):(smfsb.PMatrix[smfsb.IntState],smfsb.Time,smfsb.Time)=>smfsb.PMatrix[smfsb.IntState]", "kind" : "def"}, {"label" : "gillespie1d", "tail" : "(n: Spn[IntState], d: DoubleState, minH: Double, maxH: Double): (GenSeq[IntState], Time, Time) ⇒ GenSeq[IntState]", "member" : "smfsb.Spatial.gillespie1d", "link" : "smfsb\/Spatial$.html#gillespie1d(n:smfsb.Spn[smfsb.IntState],d:smfsb.DoubleState,minH:Double,maxH:Double):(scala.collection.GenSeq[smfsb.IntState],smfsb.Time,smfsb.Time)=>scala.collection.GenSeq[smfsb.IntState]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Spatial$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Spatial$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Spatial$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Spatial$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Spatial$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Spatial$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Spatial$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Spatial$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Spatial$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Spatial$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Spatial$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Spatial$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Spatial$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Spatial$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Spatial$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Spatial$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Spatial$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Spatial$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Spatial$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Spn", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/package$$Spn.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/package$$Spn.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/package$$Spn.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/package$$Spn.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/package$$Spn.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/package$$Spn.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/package$$Spn.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$Spn.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$Spn.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$Spn.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/package$$Spn.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/package$$Spn.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/package$$Spn.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/package$$Spn.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/package$$Spn.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/package$$Spn.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/package$$Spn.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/package$$Spn.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/package$$Spn.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "h", "tail" : "(): (S, Time) ⇒ HazardVec", "member" : "smfsb.Spn.h", "link" : "smfsb\/package$$Spn.html#h:(S,smfsb.package.Time)=>smfsb.package.HazardVec", "kind" : "abstract def"}, {"label" : "post", "tail" : "(): DenseMatrix[Int]", "member" : "smfsb.Spn.post", "link" : "smfsb\/package$$Spn.html#post:breeze.linalg.DenseMatrix[Int]", "kind" : "abstract def"}, {"label" : "pre", "tail" : "(): DenseMatrix[Int]", "member" : "smfsb.Spn.pre", "link" : "smfsb\/package$$Spn.html#pre:breeze.linalg.DenseMatrix[Int]", "kind" : "abstract def"}, {"label" : "species", "tail" : "(): List[String]", "member" : "smfsb.Spn.species", "link" : "smfsb\/package$$Spn.html#species:List[String]", "kind" : "abstract def"}], "shortDescription" : "Main trait for stochastic Petri nets (SPNs)", "trait" : "smfsb\/package$$Spn.html", "kind" : "trait"}, {"name" : "smfsb.SpnModels", "shortDescription" : "Some example SPN models, each of which can be instantiated with eitherdiscrete or continous states.", "object" : "smfsb\/SpnModels$.html", "members_object" : [{"label" : "ar", "tail" : "(c: DenseVector[Double])(arg0: State[S]): Spn[S]", "member" : "smfsb.SpnModels.ar", "link" : "smfsb\/SpnModels$.html#ar[S](c:breeze.linalg.DenseVector[Double])(implicitevidence$7:smfsb.State[S]):smfsb.Spn[S]", "kind" : "def"}, {"label" : "mm", "tail" : "(p: DenseVector[Double])(arg0: State[S]): Spn[S]", "member" : "smfsb.SpnModels.mm", "link" : "smfsb\/SpnModels$.html#mm[S](p:breeze.linalg.DenseVector[Double])(implicitevidence$6:smfsb.State[S]):smfsb.Spn[S]", "kind" : "def"}, {"label" : "seir", "tail" : "(p: DenseVector[Double])(arg0: State[S]): Spn[S]", "member" : "smfsb.SpnModels.seir", "link" : "smfsb\/SpnModels$.html#seir[S](p:breeze.linalg.DenseVector[Double])(implicitevidence$5:smfsb.State[S]):smfsb.Spn[S]", "kind" : "def"}, {"label" : "sir", "tail" : "(p: DenseVector[Double])(arg0: State[S]): Spn[S]", "member" : "smfsb.SpnModels.sir", "link" : "smfsb\/SpnModels$.html#sir[S](p:breeze.linalg.DenseVector[Double])(implicitevidence$4:smfsb.State[S]):smfsb.Spn[S]", "kind" : "def"}, {"label" : "id", "tail" : "(p: DenseVector[Double])(arg0: State[S]): Spn[S]", "member" : "smfsb.SpnModels.id", "link" : "smfsb\/SpnModels$.html#id[S](p:breeze.linalg.DenseVector[Double])(implicitevidence$3:smfsb.State[S]):smfsb.Spn[S]", "kind" : "def"}, {"label" : "lv4", "tail" : "(p: DenseVector[Double])(arg0: State[S]): Spn[S]", "member" : "smfsb.SpnModels.lv4", "link" : "smfsb\/SpnModels$.html#lv4[S](p:breeze.linalg.DenseVector[Double])(implicitevidence$2:smfsb.State[S]):smfsb.Spn[S]", "kind" : "def"}, {"label" : "lv", "tail" : "(p: DenseVector[Double])(arg0: State[S]): Spn[S]", "member" : "smfsb.SpnModels.lv", "link" : "smfsb\/SpnModels$.html#lv[S](p:breeze.linalg.DenseVector[Double])(implicitevidence$1:smfsb.State[S]):smfsb.Spn[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/SpnModels$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/SpnModels$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/SpnModels$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/SpnModels$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/SpnModels$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/SpnModels$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/SpnModels$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/SpnModels$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/SpnModels$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/SpnModels$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/SpnModels$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/SpnModels$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/SpnModels$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/SpnModels$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/SpnModels$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/SpnModels$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/SpnModels$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/SpnModels$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/SpnModels$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.State", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/package$$State.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/package$$State.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/package$$State.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/package$$State.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/package$$State.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/package$$State.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/package$$State.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$State.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$State.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$State.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/package$$State.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/package$$State.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/package$$State.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/package$$State.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/package$$State.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/package$$State.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/package$$State.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/package$$State.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/package$$State.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toDvd", "tail" : "(value: S): DenseVector[Double]", "member" : "smfsb.CsvRow.toDvd", "link" : "smfsb\/package$$State.html#toDvd(value:T):breeze.linalg.DenseVector[Double]", "kind" : "abstract def"}, {"label" : "toCsv", "tail" : "(value: S): String", "member" : "smfsb.CsvRow.toCsv", "link" : "smfsb\/package$$State.html#toCsv(value:T):String", "kind" : "abstract def"}], "shortDescription" : "State type class, with implementations for Breeze DenseVector Ints and Doubles", "trait" : "smfsb\/package$$State.html", "kind" : "trait"}, {"name" : "smfsb.Step", "shortDescription" : "Functions which accept a Spn and return a function for simulating from the transition kernel of that model", "object" : "smfsb\/Step$.html", "members_object" : [{"label" : "euler", "tail" : "(n: Spn[DoubleState], dt: Double): (DoubleState, Time, Time) ⇒ DoubleState", "member" : "smfsb.Step.euler", "link" : "smfsb\/Step$.html#euler(n:smfsb.Spn[smfsb.DoubleState],dt:Double):(smfsb.DoubleState,smfsb.Time,smfsb.Time)=>smfsb.DoubleState", "kind" : "def"}, {"label" : "cle", "tail" : "(n: Spn[DoubleState], dt: Double): (DoubleState, Time, Time) ⇒ DoubleState", "member" : "smfsb.Step.cle", "link" : "smfsb\/Step$.html#cle(n:smfsb.Spn[smfsb.DoubleState],dt:Double):(smfsb.DoubleState,smfsb.Time,smfsb.Time)=>smfsb.DoubleState", "kind" : "def"}, {"label" : "pts", "tail" : "(n: Spn[IntState], dt: Double): (IntState, Time, Time) ⇒ IntState", "member" : "smfsb.Step.pts", "link" : "smfsb\/Step$.html#pts(n:smfsb.Spn[smfsb.IntState],dt:Double):(smfsb.IntState,smfsb.Time,smfsb.Time)=>smfsb.IntState", "kind" : "def"}, {"label" : "gillespie", "tail" : "(n: Spn[IntState], minH: Double, maxH: Double): (IntState, Time, Time) ⇒ IntState", "member" : "smfsb.Step.gillespie", "link" : "smfsb\/Step$.html#gillespie(n:smfsb.Spn[smfsb.IntState],minH:Double,maxH:Double):(smfsb.IntState,smfsb.Time,smfsb.Time)=>smfsb.IntState", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/Step$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/Step$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/Step$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/Step$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/Step$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/Step$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/Step$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Step$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Step$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/Step$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/Step$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/Step$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/Step$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/Step$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/Step$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/Step$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/Step$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/Step$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/Step$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "smfsb.Thinnable", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/package$$Thinnable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/package$$Thinnable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/package$$Thinnable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/package$$Thinnable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/package$$Thinnable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/package$$Thinnable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/package$$Thinnable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$Thinnable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$Thinnable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$Thinnable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/package$$Thinnable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/package$$Thinnable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/package$$Thinnable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/package$$Thinnable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/package$$Thinnable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/package$$Thinnable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/package$$Thinnable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/package$$Thinnable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/package$$Thinnable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "thin", "tail" : "(f: F[T], th: Int): F[T]", "member" : "smfsb.Thinnable.thin", "link" : "smfsb\/package$$Thinnable.html#thin[T](f:F[T],th:Int):F[T]", "kind" : "abstract def"}], "shortDescription" : "A type class for things which can be \"thinned\", with an implementation for Stream.", "trait" : "smfsb\/package$$Thinnable.html", "kind" : "trait"}, {"name" : "smfsb.ThinnableSyntax", "shortDescription" : "Provision of the .thin syntax for Thinnable things", "members_class" : [{"label" : "thin", "tail" : "(th: Int)(inst: Thinnable[F]): F[T]", "member" : "smfsb.ThinnableSyntax.thin", "link" : "smfsb\/package$$ThinnableSyntax.html#thin(th:Int)(implicitinst:smfsb.package.Thinnable[F]):F[T]", "kind" : "def"}, {"member" : "smfsb.ThinnableSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/package$$ThinnableSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/package$$ThinnableSyntax.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/package$$ThinnableSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/package$$ThinnableSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/package$$ThinnableSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/package$$ThinnableSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/package$$ThinnableSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$ThinnableSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$ThinnableSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$ThinnableSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/package$$ThinnableSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/package$$ThinnableSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "smfsb\/package$$ThinnableSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/package$$ThinnableSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "smfsb\/package$$ThinnableSyntax.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "smfsb\/package$$ThinnableSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/package$$ThinnableSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/package$$ThinnableSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/package$$ThinnableSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "smfsb\/package$$ThinnableSyntax.html", "kind" : "class"}, {"name" : "smfsb.UnmarkedSpn", "shortDescription" : "Case class for SPNs without an initial marking", "members_case class" : [{"member" : "smfsb.UnmarkedSpn#<init>", "error" : "unsupported entity"}, {"label" : "h", "tail" : ": (S, Time) ⇒ HazardVec", "member" : "smfsb.UnmarkedSpn.h", "link" : "smfsb\/package$$UnmarkedSpn.html#h:(S,smfsb.package.Time)=>smfsb.package.HazardVec", "kind" : "val"}, {"label" : "post", "tail" : ": DenseMatrix[Int]", "member" : "smfsb.UnmarkedSpn.post", "link" : "smfsb\/package$$UnmarkedSpn.html#post:breeze.linalg.DenseMatrix[Int]", "kind" : "val"}, {"label" : "pre", "tail" : ": DenseMatrix[Int]", "member" : "smfsb.UnmarkedSpn.pre", "link" : "smfsb\/package$$UnmarkedSpn.html#pre:breeze.linalg.DenseMatrix[Int]", "kind" : "val"}, {"label" : "species", "tail" : ": List[String]", "member" : "smfsb.UnmarkedSpn.species", "link" : "smfsb\/package$$UnmarkedSpn.html#species:List[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "smfsb\/package$$UnmarkedSpn.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "smfsb\/package$$UnmarkedSpn.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "smfsb\/package$$UnmarkedSpn.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "smfsb\/package$$UnmarkedSpn.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "smfsb\/package$$UnmarkedSpn.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "smfsb\/package$$UnmarkedSpn.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "smfsb\/package$$UnmarkedSpn.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$UnmarkedSpn.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$UnmarkedSpn.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "smfsb\/package$$UnmarkedSpn.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "smfsb\/package$$UnmarkedSpn.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "smfsb\/package$$UnmarkedSpn.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "smfsb\/package$$UnmarkedSpn.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "smfsb\/package$$UnmarkedSpn.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "smfsb\/package$$UnmarkedSpn.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "smfsb\/package$$UnmarkedSpn.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "smfsb\/package$$UnmarkedSpn.html", "kind" : "case class"}]};